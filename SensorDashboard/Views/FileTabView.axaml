<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:SensorDashboard.ViewModels"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:local="using:SensorDashboard"
             xmlns:views="clr-namespace:SensorDashboard.Views"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
             x:Class="SensorDashboard.Views.FileTabView"
             x:DataType="vm:FileTabViewModel"
             x:CompileBindings="True"
             x:Name="ThisControl">

    <UserControl.Resources>
        <local:DataGridCellColorMultiConverter x:Key="DataGridCellColorMultiConverter" />
    </UserControl.Resources>

    <UserControl.Styles>

        <Style Selector="Grid > NumericUpDown, Grid > ui|NumberBox">
            <!-- Apply same margin value to all direct-child text boxes. -->
            <Setter Property="Margin" Value="8 4" />
        </Style>

        <Style Selector="Grid > NumericUpDown, Grid > ui|NumberBox, DataGridCell">
            <!-- Use tabular figures for numerical inputs so text width
                 doesn't change as value changes. -->
            <Setter Property="FontFeatures">
                <FontFeatureCollection>
                    <FontFeature Tag="tnum" Value="1" />
                </FontFeatureCollection>
            </Setter>
        </Style>

        <Style Selector="Grid > :is(Control)">
            <!-- Vertically centre all Grid child controls. -->
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <Style Selector="DataGridCell">
            <Setter Property="Padding" Value="0" />
        </Style>

        <!-- DataGrid cells and their content are updated separately,
             meaning that the selector needs to target the inner
             TextBlock instead of the DataGridCell itself. -->
        <Style Selector="DataGridCell TextBlock">
            <Setter Property="Background">
                <!-- Use a multi-binding so changes to either the grid cell
                     content, min or max values will trigger style update. -->
                <MultiBinding Converter="{StaticResource DataGridCellColorMultiConverter}">
                    <Binding Path="((vm:FileTabViewModel)DataContext).ThresholdMinimum"
                             FallbackValue="0"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=views:FileTabView}" />
                    <Binding Path="((vm:FileTabViewModel)DataContext).ThresholdMaximum"
                             FallbackValue="100"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=views:FileTabView}" />
                    <Binding RelativeSource="{RelativeSource Self}"
                             Path="Text" />
                </MultiBinding>
            </Setter>

            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextAlignment" Value="Center" />
        </Style>
    </UserControl.Styles>

    <Grid ColumnDefinitions="Auto, *, Auto, *"
          RowDefinitions="Auto, Auto, Auto, Auto, *"
          Margin="8 0">

        <ui:CommandBar Grid.Column="0"
                       Grid.Row="0"
                       Grid.ColumnSpan="4"
                       DefaultLabelPosition="Right">

            <ui:CommandBar.PrimaryCommands>

                <ui:CommandBarButton
                    Label="Open"
                    IconSource="Folder"
                    Command="{Binding OpenFile}" />

                <ui:CommandBarButton
                    Label="Save"
                    IconSource="Save"
                    Command="{Binding SaveFile}" />

            </ui:CommandBar.PrimaryCommands>

        </ui:CommandBar>

        <Label Grid.Column="0" Grid.Row="1" Content="Total average:" />
        <NumericUpDown Grid.Column="1"
                       Grid.Row="1"
                       IsReadOnly="True"
                       FormatString="0.00"
                       ShowButtonSpinner="False"
                       IsEnabled="False"
                       Focusable="False"
                       Value="{Binding AverageTotal}" />

        <Label Grid.Column="0" Grid.Row="2" Content="Row average:" />
        <NumericUpDown Grid.Column="1"
                       Grid.Row="2"
                       IsReadOnly="True"
                       FormatString="0.00"
                       ShowButtonSpinner="False"
                       IsEnabled="False"
                       Focusable="False"
                       Value="{Binding AverageRow, TargetNullValue=0}" />

        <Label Grid.Column="0" Grid.Row="3" Content="Column average:" />
        <NumericUpDown Grid.Column="1"
                       Grid.Row="3"
                       IsReadOnly="True"
                       FormatString="0.00"
                       ShowButtonSpinner="False"
                       IsEnabled="False"
                       Focusable="False" />

        <Label Grid.Column="2" Grid.Row="1" Content="Threshold minimum:" />

        <ui:NumberBox Grid.Column="3"
                      Grid.Row="1"
                      AcceptsExpression="True"
                      HorizontalAlignment="Stretch"
                      SpinButtonPlacementMode="Inline"
                      Value="{Binding ThresholdMinimum}"
                      Maximum="{Binding ThresholdMaximum}" />

        <Label Grid.Column="2" Grid.Row="2" Content="Threshold maximum:" />
        <ui:NumberBox Grid.Column="3"
                      Grid.Row="2"
                      AcceptsExpression="True"
                      HorizontalAlignment="Stretch"
                      SpinButtonPlacementMode="Inline"
                      Value="{Binding ThresholdMaximum}"
                      Minimum="{Binding ThresholdMinimum} "/>

        <DataGrid x:Name="DataGridDisplay"
                  Grid.Row="4"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Margin="0 8"
                  ItemsSource="{Binding DataGridSource}"
                  GridLinesVisibility="All"
                  VerticalAlignment="Stretch"
                  HorizontalAlignment="Stretch"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  CanUserSortColumns="False"
                  SelectedIndex="{Binding DataGridSelectedIndex}">

        </DataGrid>

    </Grid>
</UserControl>
