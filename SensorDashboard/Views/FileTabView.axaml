<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:SensorDashboard.ViewModels"
             xmlns:ui="using:FluentAvalonia.UI.Controls"
             xmlns:views="using:SensorDashboard.Views"
             xmlns:utils="clr-namespace:SensorDashboard.Utils"
             mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="450"
             x:Class="SensorDashboard.Views.FileTabView"
             x:DataType="vm:FileTabViewModel"
             x:Name="View">

    <UserControl.Resources>
        <utils:DataGridCellColorMultiConverter x:Key="DataGridCellColorMultiConverter" />
    </UserControl.Resources>

    <UserControl.Styles>

        <Style Selector="UniformGrid">
            <Setter Property="Columns" Value="1" />
            <Setter Property="DockPanel.Dock" Value="Left" />
            <Setter Property="Margin" Value="0 0 4 0" />
            <Setter Property="Interaction.Behaviors">
                <BehaviorCollection>
                    <AdaptiveBehavior SourceControl="{Binding #View}">
                        <AdaptiveClassSetter MinWidth="0" MaxWidth="500" ClassName="narrow" />
                    </AdaptiveBehavior>
                </BehaviorCollection>
            </Setter>

            <Style Selector="^.narrow">
                <Setter Property="Columns" Value="2" />
                <Setter Property="DockPanel.Dock" Value="Bottom" />
                <Setter Property="Margin" Value="0 4 0 0" />
            </Style>

            <Style Selector="^ > StackPanel">
                <Setter Property="Margin" Value="8 0 8 8" />
            </Style>

            <Style Selector="^ Label">
                <Setter Property="Margin" Value="0 4" />
            </Style>
        </Style>

        <Style Selector="Grid > NumericUpDown, Grid > ui|NumberBox, DataGridCell">
            <!-- Use tabular figures for numerical inputs so text width
                 doesn't change as value changes. -->
            <Setter Property="FontFeatures" Value="tnum" />
        </Style>

        <Style Selector="Grid > :is(Control)">
            <!-- Vertically centre all Grid child controls. -->
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>

        <!-- Colour DataGridCells based on their numerical value. -->
        <Style Selector="TreeDataGridTextCell">
            <Setter Property="Background">
                <!-- Use a multi-binding so changes to either the grid cell
                     content, min or max values will trigger style update. -->
                <MultiBinding Converter="{StaticResource DataGridCellColorMultiConverter}">
                    <Binding Path="((vm:FileTabViewModel)DataContext).ThresholdMinimum"
                             RelativeSource="{RelativeSource AncestorType=views:FileTabView}"
                             FallbackValue="0" />
                    <Binding Path="((vm:FileTabViewModel)DataContext).ThresholdMaximum"
                             RelativeSource="{RelativeSource AncestorType=views:FileTabView}"
                             FallbackValue="100" />
                    <!-- Use a reflection binding to prevent errors. -->
                    <ReflectionBinding Path="$self.((Border)VisualChildren[0]).((TextBlock)Child).Text"
                                       FallbackValue="" />
                    <!-- Pass self into multi-converter so dynamic resource
                         background can be applied. -->
                    <Binding Path="$self" />
                </MultiBinding>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource DataGridCellForegroundBrush}" />
        </Style>

    </UserControl.Styles>

    <DockPanel Margin="4">

        <ui:CommandBar DockPanel.Dock="Top"
                       DefaultLabelPosition="Right"
                       Margin="0 0 0 4">

            <ui:CommandBar.PrimaryCommands>

                <ui:CommandBarButton
                    Label="Open"
                    IconSource="Folder"
                    Click="OpenFileButton_OnClick"
                    HotKey="{OnPlatform Ctrl+O, macOS=Cmd+O}" />

                <ui:CommandBarButton
                    Label="Save"
                    IconSource="Save"
                    Click="SaveFileButton_OnClick"
                    HotKey="{OnPlatform Ctrl+S, macOS=Cmd+S}" />

                <ui:CommandBarButton
                    Label="Rename Dataset"
                    IconSource="Edit"
                    Click="RenameDatasetButton_OnClick"
                    HotKey="{OnPlatform Ctrl+R, macOS=Cmd+R}" />

            </ui:CommandBar.PrimaryCommands>

            <ui:CommandBar.SecondaryCommands>

                <ui:CommandBarButton
                    Label="Open Sample Data"
                    IconSource="List"
                    Click="OpenSampleDataButton_OnClick" />

                <ui:CommandBarButton
                    Label="Save As"
                    IconSource="Save"
                    Click="SaveFileAsButton_OnClick"
                    HotKey="{OnPlatform Ctrl+Shift+S, macOS=Cmd+Shift+S}" />

            </ui:CommandBar.SecondaryCommands>

        </ui:CommandBar>

        <UniformGrid VerticalAlignment="Top"
                     MinWidth="200">

            <StackPanel>
                <Label Content="Total average:" />
                <NumericUpDown IsReadOnly="True"
                               FormatString="0.00"
                               ShowButtonSpinner="False"
                               Focusable="False"
                               Value="{Binding AverageTotal}" />
            </StackPanel>

            <StackPanel>
                <Label Content="Row average:" />
                <NumericUpDown IsReadOnly="True"
                               FormatString="0.00"
                               ShowButtonSpinner="False"
                               Focusable="False"
                               Value="{Binding AverageRow, TargetNullValue=0}" />
            </StackPanel>

            <StackPanel>
                <Label Content="Threshold min:" />
                <ui:NumberBox AcceptsExpression="True"
                              HorizontalAlignment="Stretch"
                              SpinButtonPlacementMode="Inline"
                              SimpleNumberFormat="0.00"
                              Value="{Binding ThresholdMinimum}"
                              Maximum="{Binding ThresholdMaximum}" />
            </StackPanel>

            <StackPanel>
                <Label Content="Threshold max:" />
                <ui:NumberBox AcceptsExpression="True"
                              HorizontalAlignment="Stretch"
                              SpinButtonPlacementMode="Inline"
                              SimpleNumberFormat="0.00"
                              Value="{Binding ThresholdMaximum}"
                              Minimum="{Binding ThresholdMinimum} " />
            </StackPanel>

        </UniformGrid>

        <Border CornerRadius="8"
                VerticalAlignment="Stretch"
                HorizontalAlignment="Stretch"
                BoxShadow="{DynamicResource DataGridShadow}">

            <Border CornerRadius="{Binding $parent.CornerRadius}"
                    ClipToBounds="True"
                    VerticalAlignment="Stretch"
                    HorizontalAlignment="Stretch"
                    Background="{DynamicResource DataGridBackgroundShadeBrush}">

                <TreeDataGrid x:Name="DataGridDisplay"
                              Source="{Binding DataGridSource}"
                              CanUserResizeColumns="False"
                              CanUserSortColumns="False"
                              VerticalAlignment="Top"
                              IsVisible="{Binding DataGridSource.Columns.Count}" />
            </Border>
        </Border>

    </DockPanel>
</UserControl>
